Desafio: Listar Usu√°rios na Tela
üìå Utilize a API p√∫blica https://jsonplaceholder.typicode.com/users para buscar uma lista de usu√°rios e exibi-los em uma tabela HTML.

O que o aluno precisa fazer?
Criar um bot√£o "Carregar Usu√°rios".

Ao clicar no bot√£o, buscar os usu√°rios da API usando fetch().

Exibir os dados em uma tabela (<table>) com as colunas Nome, E-mail e Empresa.

C√≥digo base para come√ßar
Os alunos podem come√ßar com este c√≥digo HTML:

html
Copiar
Editar
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Usu√°rios</title>
    <style>
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>

    <h1>Lista de Usu√°rios</h1>
    <button onclick="carregarUsuarios()">Carregar Usu√°rios</button>

    <table id="tabelaUsuarios">
        <thead>
            <tr>
                <th>Nome</th>
                <th>E-mail</th>
                <th>Empresa</th>
            </tr>
        </thead>
        <tbody>
            <!-- Os dados ser√£o inseridos aqui -->
        </tbody>
    </table>

    <script>
        function carregarUsuarios() {
            fetch('https://jsonplaceholder.typicode.com/users')
                .then(response => response.json())
                .then(usuarios => {
                    const tabela = document.querySelector("#tabelaUsuarios tbody");
                    tabela.innerHTML = ""; // Limpa os dados antes de carregar novos
                    
                    usuarios.forEach(usuario => {
                        let linha = `<tr>
                            <td>${usuario.name}</td>
                            <td>${usuario.email}</td>
                            <td>${usuario.company.name}</td>
                        </tr>`;
                        tabela.innerHTML += linha;
                    });
                })
                .catch(error => console.error("Erro ao carregar os usu√°rios:", error));
        }
    </script>

</body>
</html>
Dicas para os alunos
üí° Dica 1: O bot√£o chama a fun√ß√£o carregarUsuarios(), que faz a requisi√ß√£o para a API.
üí° Dica 2: fetch() retorna uma promessa, por isso usamos .then(response => response.json()).
üí° Dica 3: usuarios.forEach() percorre a lista de usu√°rios e adiciona uma nova linha <tr> para cada um.
üí° Dica 4: tabela.innerHTML = "" limpa a tabela antes de adicionar novos dados.

Desafios Extras para os Alunos
üî• 1. Adicionar uma coluna "Telefone"
üî• 2. Criar um campo de pesquisa para filtrar os usu√°rios pelo nome
üî• 3. Exibir um alerta caso a API n√£o retorne nenhum usu√°rio